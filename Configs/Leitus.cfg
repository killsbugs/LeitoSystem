// KittopiaTech - a Kopernicus Visual Editor

@Kopernicus
{
	Body
	{
		name = Leitus
		cacheFile = LeitoSystem/Cache/Leitus.bin
		barycenter = False
		implements = 
		finalizeOrbit = False
		randomMainMenuBody = False
		contractWeight = 30
		Properties
		{
			description = A B-type main sequence star.
			radius = 70000000
			geeASL = 13.8954944531053
			mass = 1.0004591319326E+30
			gravParameter = 6.67714428324873E+19
			rotates = True
			rotationPeriod = 13589
			tidallyLocked = False
			initialRotation = 0
			inverseRotThresholdAltitude = 600000
			albedo = 0
			emissivity = 0
			coreTemperatureOffset = 0
			timewarpAltitudeLimits = 0 3270000 3270000 6540000 1.308E+07 2.616E+07 5.232E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07 6.54E+07
			sphereOfInfluence = 2790486920000
			solarRotationPeriod = False
			navballSwitchRadiusMult = 0.06
			navballSwitchRadiusMultLow = 0.055
			useTheInName = True
			displayName = The Leitus^N
			selectable = True
			RnDVisibility = Visible
			RnDRotation = True
			maxZoom = 60000
			ScienceValues
			{
				landedDataValue = 1 // Science multiplier for landed science.
				splashedDataValue = 1 // Science multiplier for splashed down science.
				flyingLowDataValue = 1 // Science multiplier for flying low science.
				flyingHighDataValue = 1 // Science multiplier for flying high science.
				inSpaceLowDataValue = 11 // Science multiplier for in space low science.
				inSpaceHighDataValue = 2 // Science multiplier for in space high science.
				recoveryValue = 4
				flyingAltitudeThreshold = 18000 // Altitude when "flying at <body>" transitions from/to "from <body>'s upper atmosphere"
				spaceAltitudeThreshold = 1E+09 // Altitude when "in space low" transitions from/to "in space high"
			}
		}
		Orbit
		{
			referenceBody = Sun // The body that this body is orbiting around.
			inclination = 69 // The angle between the orbital plane and the ecliptic
			eccentricity = 0
			semiMajorAxis = 10580973840000
			longitudeOfAscendingNode = 69 // Where the orbit crosses the ecliptic moving south to north
			argumentOfPeriapsis = 0 // The angular distance between longitudeOfAscen
			meanAnomalyAtEpoch = 0 // The body's mean anomaly at the specified epoch, in radians
			meanAnomalyAtEpochD = 0 // The body's mean anomaly at the specified epoch, in degrees
			color = 0.634615242,1,1,1 // The color of the orbit line in the Tracking Station
		}
		ScaledVersion
		{
			type = Star
			fadeStart = 0
			fadeEnd = 0
			sphericalModel = False
			deferMesh = False
			invisible = False
			Light
			{
				sunlightColor = 0.728022039,1,1,1 // The color of the LocalSpace starlight. Influences vessels and PQS terrain.
				sunlightShadowStrength = 0.75 // The strength of the shadows caused by LocalSpace starlight.
				scaledSunlightColor = 0.77197808,1,1,1 // The color of the ScaledSpace starlight. Influences the ScaledSpace representation of the bodies.
				IVASunColor = 1,1,1,1 // The color of the starlight in IVA view.
				ambientLightColor = 0,0,0,0 // The color of ambient lighting when orbiting near the star.
				sunLensFlareColor = 0.329,0.651,1,1 // The color of the stars LensFlare effect. Gets multiplied with the color of the base texture (yellow-ish for stock flare).
				givesOffLight = True // Whether the star should emit light and have a LensFlare effect.
				sunAU = 13599840256 // TODO
				luminosity = 1460 // TODO
				insolation = 0.15 // TODO
				radiationFactor = 1 // TODO
				brightnessCurve // Associates a distance value with a multiplier for the brightness of the LensFlare effect.
				{
					key = -0.15 0 0 0.1
					key = 5 10 0 0
					key = 40 1 0 0
				}
				IntensityCurve // Associates a distance value (in meters) with a value that describes the intensity of the LocalSpace starlight at that point.
				{
					key = 1E+09 36.87796 -1.843898E-09 -1.843898E-09
					key = 2E+09 26.07666 -6.519164E-10 -2.304873E-10
					key = 4E+09 18.43898 -2.304873E-10 -2.304873E-10
					key = 5.263138E+09 16.07476 -1.527108E-10 -1.527108E-10
					key = 9.832685E+09 11.76064 0 0
					key = 1.359984E+10 10 0 0
					key = 2.072616E+10 8.10042 0 0
					key = 4.083935E+10 5.770687 0 0
					key = 6.877356E+10 4.446888 0 0
					key = 9.011882E+10 3.884715 0 0
					key = 1.001188E+11 3.685607 0 0
					key = 2E+11 2.607666 0 0
					key = 3E+11 2.12915 0 0
					key = 6E+11 1.505536 0 0
					key = 1.2E+12 1.064575 0 0
					key = 1.2E+13 0.3366482 0 0
					key = 1.2E+14 0.1064575 0 0
					key = 4.26073E+15 0.0178659 0 0
					key = 9.46073E+15 0.0119896 0 0
					key = 1.846073E+16 0 0 0
				}
				ScaledIntensityCurve // Associates a distance value (in meters / 6000) with a value that describes the intensity of the ScaledSpace starlight at that point.
				{
					key = 166666.7 36.87796 -1.106339E-05 -1.106339E-05
					key = 333333.3 26.07666 -3.911498E-06 -1.382924E-06
					key = 666666.7 18.43898 -1.382924E-06 -1.382924E-06
					key = 877189.7 16.07476 -9.162648E-07 -9.162648E-07
					key = 1638781 11.76064 -3.588228E-07 -3.588228E-07
					key = 2266640 10 -2.205908E-07 -2.205908E-07
					key = 3454359 8.10042 -1.172492E-07 -1.172492E-07
					key = 6806558 5.770687 -4.239064E-08 -4.239064E-08
					key = 1.146226E+07 4.446888 -1.939795E-08 -1.939795E-08
					key = 1.50198E+07 3.884715 -1.293198E-08 -1.293198E-08
					key = 1.668647E+07 3.685607 -1.10437E-08 -1.10437E-08
					key = 3.333333E+07 2.607666 -3.911499E-09 -3.911499E-09
					key = 5E+07 2.12915 -2.12915E-09 -2.12915E-09
					key = 1E+08 1.505536 -7.527682E-10 -7.527682E-10
					key = 2E+08 1.064575 -2.661438E-10 -2.661438E-10
					key = 2E+09 0.3366482 0 0
					key = 2E+10 0.1064575 0 0
					key = 7.101218E+11 0.0178659 0 0
					key = 1.576788E+12 0.0119896 0 0
					key = 3.076788E+12 0 0 0
				}
				IVAIntensityCurve // Associates a distance value (in meters) with a value that describes the intensity of the IVA starlight at that point.
				{
					key = 1E+09 36.87796 -1.843898E-09 -1.843898E-09
					key = 2E+09 26.07666 -6.519164E-10 -2.304873E-10
					key = 4E+09 18.43898 -2.304873E-10 -2.304873E-10
					key = 5.263138E+09 16.07476 -1.527108E-10 -1.527108E-10
					key = 9.832685E+09 11.76064 0 0
					key = 1.359984E+10 10 0 0
					key = 2.072616E+10 8.10042 0 0
					key = 4.083935E+10 5.770687 0 0
					key = 6.877356E+10 4.446888 0 0
					key = 9.011882E+10 3.884715 0 0
					key = 1.001188E+11 3.685607 0 0
					key = 2E+11 2.607666 0 0
					key = 3E+11 2.12915 0 0
					key = 6E+11 1.505536 0 0
					key = 1.2E+12 1.064575 0 0
					key = 1.2E+13 0.3366482 0 0
					key = 1.2E+14 0.1064575 0 0
					key = 4.26073E+15 0.0178659 0 0
					key = 9.46073E+15 0.0119896 0 0
					key = 1.846073E+16 0 0 0
				}
			}
			Material
			{
				rampMap = BUILTIN/
				rampMapScale = 1,1
				rampMapOffset = 0,0
				noiseMap = BUILTIN/sunnoisenew
				noiseMapScale = 1,1
				noiseMapOffset = 0,0
				emitColor0 = 0.600000024,1,1,1
				emitColor1 = 0.600000024,1,1,1
				sunspotTex = BUILTIN/sunsurfacenew
				sunspotTexScale = 1,1
				sunspotTexOffset = 0,0
				sunspotPower = 0.75
				sunspotColor = 0.15,0.33,0.33,1
				rimColor = 0.57,1,1,1
				rimPower = 10
				rimBlend = 5
			}
			Coronas
			{
				Value
				{
					scaleSpeed = 0.007
					scaleLimitY = 3
					scaleLimitX = 5
					updateInterval = 5
					speed = -1
					rotation = 0
					Material
					{
						texture = LeitoSystem/Textures/PluginData/LeitusCorona.dds
						mainTexScale = 1,1
						mainTexOffset = 0,0
						invFade = 2.553731
					}
				}
			}
		}
		Atmosphere
		{
			enabled = True // Whether the body has an atmosphere
			oxygen = False // Whether the atmosphere contains oxygen
			staticDensityASL = 0.00072492861572823 // Atmospheric density at sea level. Used to calculate the parameters of the atmosphere if no curves are used
			adiabaticIndex = 1.42999994754791 // A thermodynamic property of the gas, also known as heat capacity ratio
			atmosphereDepth = 600000 // The height of the atmosphere
			gasMassLapseRate = 3.70442828745395
			atmosphereMolarMass = 0.00219999998807907 // The mass in kilograms of one mole of gas
			pressureCurveIsNormalized = False // Whether the pressure curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values
			shockTemperatureMultiplier = 0.5 // Multiplies the External/Shock Temperature by this value. This is relevant for aerodynamic heating
			staticPressureASL = 16 // The static pressure at sea level. Used to calculate the parameters of the atmosphere if no curves are used
			temperatureCurveIsNormalized = False // Whether the temperature curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values
			temperatureLapseRate = 0.00973333333333333
			temperatureSeaLevel = 5840 // The static temperature at sea level. Used to calculate the parameters of the atmosphere if no curves are used
			ambientColor = 0,0,0,0 // All objects inside of the atmosphere will slightly shine in this color
			addAFG = True
			pressureCurve // Assigns a pressure value to a height value inside of the atmosphere
			{
				key = 0 16 0 0
				key = 5000 8.3 -0.001532 -0.001532
				key = 10000 0.68 -0.001178053 -0.001178053
				key = 10753.09 0.300954 -2.96097E-05 -2.96097E-05
				key = 14194.01 0.2613179 -8.41565E-07 -8.41565E-07
				key = 350000 0.1 -7.49481E-07 -7.49481E-07
				key = 400000 0.04 -7.05211E-07 -7.05211E-07
				key = 590000 2E-05 -6.21053E-09 -6.21053E-09
				key = 600000 0 0 0
			}
			temperatureCurve // Assigns a base temperature value to a height value inside of the atmosphere
			{
				key = 0 10840 0 -0.2780258
				key = 10000 8865 -0.01447884 -0.01447884
				key = 50000 8000 -0.007179292 0.003853968
				key = 250000 10800 0.0009989792 0.0009989792
				key = 500000 12000 0.001352723 0.001352723
				key = 600000 20000 0.06371323 0
			}
			temperatureSunMultCurve // How the temperature modifiers vary by altitude, in the form of a multiplier
			{
				key = 0 0 0 0
			}
			temperatureLatitudeBiasCurve // Latitudinal temperature modifier
			{
				key = 0 0 0 0
			}
			temperatureLatitudeSunMultCurve // Day - night temperature modifier by latitude
			{
				key = 0 0 0 0
			}
			temperatureAxialSunBiasCurve // Seasonal temperature modifier by true anomaly
			{
				key = 0 0 0 0
			}
			temperatureAxialSunMultCurve // How the seasonal temperature modifier varies by latitude
			{
				key = 0 0 0 0
			}
			temperatureEccentricityBiasCurve // Orbital eccentricity temperature modifier
			{
				key = 0 0 0 0
			}
		}
		Debug
		{
			exportMesh = True // Whether Kopernicus should save a .bin file with the ScaledSpace mesh.
			update = False // Setting this to true will force Kopernicus to update the ScaledSpace mesh.
			showSOI = False
		}
	}
}
